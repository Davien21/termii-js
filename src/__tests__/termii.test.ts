import { describe, expect, test } from '@jest/globals';
import Termii from '../termii';
import dotenv from "dotenv";
dotenv.config()

const API_KEY = process.env.API_KEY
const SENDER_ID = "offnet"

let termii: Termii;
if (API_KEY) {
  termii = new Termii(API_KEY, SENDER_ID);
} else {
  throw new Error("API_KEY is not defined. Cannot create Termii instance.");
}


describe('Termii GET endpoints', () => {

  test('fetchSenderId function returns valid response', async () => {
    let res = await termii.fetchSenderId()
    expect(res.data.data[0]).toHaveProperty('sender_id');
    expect(res.data.data[0]).toHaveProperty('status');
  })

  test('fetchBalance function returns valid response', async () => {
    let res = await termii.fetchBalance()
    expect(res.data).toHaveProperty('user');
    expect(res.data).toHaveProperty('currency');
  })

  test('search function returns valid response', async () => {
    let res = await termii.search('2348183175686')
    expect(res.data.response.data).toHaveProperty('number');
  })

  test('history function returns valid response', async () => {
    let res = await termii.history()
    expect(res.data.data[0]).toHaveProperty('sender');
    expect(res.data.data[0]).toHaveProperty('receiver');
  })


});


describe('Termii POST endpoints', () => {

  test('requestSenderId function returns valid response', async () => {
    let data = {
      usecase: "Your OTP code is xyz",
      company: "Testers Corp"
    }
    let res = await termii.requestSenderId(data)
    expect(res.data.response).toBeDefined();
  })

  test('sendMessage function returns valid response', async () => {
    let data = {
      to: '2348183175686',
      sms: 'The kola nut in a child\'s mouth is his own kola nut'
    }
    let res = await termii.sendMessage(data)
    expect(res.data.response).toBeDefined();
  })

  test('sendBulkMessage function returns valid response', async () => {
    let data = {
      to: ['2348183175686', '2348122668694'],
      sms: 'The kola nut in a child\'s mouth is his own kola nut'
    }
    let res = await termii.sendBulkMessage(data)
    expect(res.data.response).toBeDefined();
  })

  test('sendWithAutoGeneratedNumber function returns valid response', async () => {
    let data = {
      to: '2348183175686',
      sms: 'The kola nut in a child\'s mouth is his own kola nut'
    }
    let res = await termii.sendWithAutoGeneratedNumber(data)
    expect(res.data.response).toBeDefined();
  })

  test('sendToken function returns valid response', async () => {
    let data = {
      to: '2348183175686',
      message_text: 'The kola nut in a child\'s mouth is his own kola nut'
    }
    let res = await termii.sendToken(data)
    expect(res.data.response).toBeDefined();
  })

  test('inAppToken function returns valid response', async () => {
    let data = {
      phone_number: 2348183175686,
    }
    let res = await termii.inAppToken(data)
    expect(res.data.status).toBe('success');
  })

})